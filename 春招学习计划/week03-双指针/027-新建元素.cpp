/*<FH+>************************************************************************
*   Editor      : Vim
*   File name   : 027-新建元素.cpp 
*   Author      : huihui571
*   Created date: 2021-02-05
*   Description : 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。
*   不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。
*   元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。
*
*<FH->************************************************************************/
#include <bits/stdc++.h>
using namespace std;

/**
 * 1. 暴力。每删除一个元素就移动它后面所有的元素。时间复杂度O(n2)。
 * 2. 辅助数组。开一个新数组来存储答案，元素不等于给定的目标值，则迭代原始数组并将元素添加到新数组中。
 * 3. 双指针。相当于一个指针p1指向原始数组，另一个指针p2指向答案数组。p1每次移动一步，p2只有当p1指向的
 * 值不等于val的时候才移动一步。
 */
class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int p1 = 0, p2 = 0;
        for (; p1 < nums.size(); p1++) {
            if (nums[p1] != val) {
                nums[p2] = nums[p1];
                p2++;
            }
        }
        return p2;
    }
};
